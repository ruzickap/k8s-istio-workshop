name: build-test

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - .github/workflows/build-test.yml
  push:
    branches:
      - master

jobs:
  terraform-checks:
    name: Terraform checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install Terraform
        run: |
          export TERRAFORM_VERSION="0.12.29"
          curl --silent --location https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip --output /tmp/terraform_linux_amd64.zip
          sudo unzip -q -o /tmp/terraform_linux_amd64.zip -d /usr/local/bin/

      - name: Generate ssh key if needed
        run: |
          install -m 0700 -d $HOME/.ssh
          ssh-keygen -t rsa -f $HOME/.ssh/id_rsa -q -N ""

      - name: Fill terraform variables with test data
        run: |
          cat > terraform.tfvars << EOF
          openstack_instance_image_name  = "test"
          openstack_password             = "test"
          openstack_tenant_name          = "test"
          openstack_user_domain_name     = "test"
          openstack_user_name            = "test"
          openstack_auth_url             = "test"
          openstack_instance_flavor_name = "test"
          EOF

      - name: Run terraform checks
        run: |
          terraform init     -var-file=terraform.tfvars terrafrom/openstack
          terraform validate -var-file=terraform.tfvars terrafrom/openstack

  # command-check:
  #   runs-on: ubuntu-18.04
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Update repositories
  #       run: sudo apt update

  #     - name: Run tests
  #       run: |
  #         sudo apt install -y pv siege
  #         tests/ci_test.sh

  markdownlint-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Markdown Lint
        uses: ruzickap/action-my-markdown-linter@v1
        with:
          exclude: |
            CHANGELOG.md

  markdown-spell-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install markdown-spellcheck
        run: npm install -g markdown-spellcheck

      - name: Run mdspell
        run: find . -type f \( -name "*.md" ! -name "CHANGELOG.md" \) | xargs --max-args=1 --verbose mdspell --ignore-numbers --ignore-acronyms --report --en-gb

  vuepress-build-check-deploy:
    runs-on: ubuntu-latest
    needs:
      - markdownlint-check
      - markdown-spell-check
    steps:
      - uses: actions/checkout@v2

      - name: Install Node.js 12
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Install VuePress and build the document
        run: |
          npm install
          npm run build
          cp LICENSE docs/.vuepress/dist
          sed -e "s@(part-@(https://github.com/${{ github.repository }}/tree/master/docs/part-@" -e 's@.\/.vuepress\/public\/@./@' docs/README.md > docs/.vuepress/dist/README.md

      - name: Check broken links
        env:
          INPUT_URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}
          INPUT_PAGES_PATH: .
          INPUT_CMD_PARAMS: --buffer-size=8192 --concurrency=10 --skip-tls-verification --exclude=(mylabs.dev|localhost)
        run: |
          ln -s docs/.vuepress/dist ${{ github.event.repository.name }}
          wget -qO- https://raw.githubusercontent.com/ruzickap/action-my-broken-link-checker/v1/entrypoint.sh | bash

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/.vuepress/dist
          force_orphan: true
